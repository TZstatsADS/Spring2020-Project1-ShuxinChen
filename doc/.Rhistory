strsplit(rock$lyrics[1], split = "\n")
?get_nrc_sentiment
get_nrc_sentiment(strsplit(rock$lyrics[1], split = "\n"))
class(strsplit(rock$lyrics[1], split = "\n"))
l<-strsplit(rock$lyrics[1], split = "\n")
l<-as.vector(l)
class(l)
l<-unlist(l)
get_nrc_sentiment(l)
nrow(rockt1)
strsplit(rockt1$stemmedwords[1])
strsplit(rockt1$stemmedwords[1],split = " ")
w<-unlist(strsplit(rockt1$stemmedwords[1],split = " "))
get_nrc_sentiment(w)
f.word_count(w)
f.word_count(l)
?f.plotsent.len
View(f.plotsent.len)
sentiment.df<-NULL
for (i in 1:nrow(rockt1)){
words<-unlist(strsplit(rockt1$stemmedwords[i]), split=" ")
if(length(words)>0){
emotions<-get_nrc_sentiment(words)
word.count<-f.word_count(words)
emotions<-diag(1/(word.count+0.01))%*%as.matrix(emotions)
sentiment.df=rbind(sentiment.df,
cbind(rockt1[i,],
words=as.character(words),
word.count,
emotions,
word.id=1:length(words)))
}
}
sentiment.df<-NULL
for (i in 1:nrow(rockt1)){
words<-unlist(strsplit(rockt1$stemmedwords[i], split = " "))
if(length(words)>0){
emotions<-get_nrc_sentiment(words)
word.count<-f.word_count(words)
emotions<-diag(1/(word.count+0.01))%*%as.matrix(emotions)
sentiment.df=rbind(sentiment.df,
cbind(rockt1[i,],
words=as.character(words),
word.count,
emotions,
word.id=1:length(words)))
}
}
sentiment.df<-NULL
for (i in 1:5){
words<-unlist(strsplit(rockt1$stemmedwords[i], split = " "))
if(length(words)>0){
emotions<-get_nrc_sentiment(words)
word.count<-f.word_count(words)
emotions<-diag(1/(word.count+0.01))%*%as.matrix(emotions)
sentiment.df=rbind(sentiment.df,
cbind(rockt1[i,],
words=as.character(words),
word.count,
emotions,
word.id=1:length(words)))
}
}
View(sentiment.df)
?emotion
class(get_sentences(mytext))
get_sentences(l)
get_sentences(rockt1$stemmedwords[1])
get_sentences(w)
rockt1$stemmedwords[1]
s<-get_sentences(l)
s
emotionn(s)
emotion(s)
View(f.plotsent.len)
sentence.list<-NULL
for (i in 1:2)){
sentence.list<-NULL
for (i in 1:2){
sentences<-get_sentences(unlist(strsplit(rockt1$stemmedwords[i], split = " ")))
if(length(sentences)>0){
emotions<-matrix(emotion(sentences)$emotion,
nrow=length(sentences),
byrow=T)
colnames(emotions)=emotion(sentences[1])$emotion_type
emotions=data.frame(emotions)
emotions=select(emotions,
anticipation,
joy,
surprise,
trust,
anger,
disgust,
fear,
sadness)
word.count<-f.word_count(sentences)
sentence.list=rbind(sentence.list,
cbind(rockt1[i,],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)))
}
}
sentence.list<-NULL
for (i in 1:2){
sentences<-get_sentences(unlist(strsplit(rockt1$lyrics[i], split = "\n")))
if(length(sentences)>0){
emotions<-matrix(emotion(sentences)$emotion,
nrow=length(sentences),
byrow=T)
colnames(emotions)=emotion(sentences[1])$emotion_type
emotions=data.frame(emotions)
emotions=select(emotions,
anticipation,
joy,
surprise,
trust,
anger,
disgust,
fear,
sadness)
word.count<-f.word_count(sentences)
sentence.list=rbind(sentence.list,
cbind(rockt1[i,],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)))
}
}
View(sentence.list)
names(sentence.list)
sentence.list<-NULL
for (i in 1:nrow(rockt1)){
sentences<-get_sentences(unlist(strsplit(rockt1$lyrics[i], split = "\n")))
if(length(sentences)>0){
emotions<-matrix(emotion(sentences)$emotion,
nrow=length(sentences),
byrow=T)
colnames(emotions)=emotion(sentences[1])$emotion_type
emotions=data.frame(emotions)
emotions=select(emotions,
anticipation,
joy,
surprise,
trust,
anger,
disgust,
fear,
sadness)
word.count<-f.word_count(sentences)
sentence.list=rbind(sentence.list,
cbind(rockt1[i,],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)))
}
}
for (i in 1:3){
sentences<-get_sentences(unlist(strsplit(rockt1$lyrics[i], split = "\n")))
if(length(sentences)>0){
emotions<-matrix(emotion(sentences)$emotion,
nrow=length(sentences),
byrow=T)
colnames(emotions)=emotion(sentences[1])$emotion_type
emotions=data.frame(emotions)
emotions=select(emotions,
anticipation,
joy,
surprise,
trust,
anger,
disgust,
fear,
sadness)
word.count<-f.word_count(sentences)
sentence.list=rbind(sentence.list,
cbind(rockt1[i,],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)))
}
}
View(sentence.list)
View(sentence.list)
?get_sentences
(x <- c(paste0(
"Mr. Brown comes! He says hello. i give him coffee.  i will ",
"go at 5 p. m. eastern time.  Or somewhere in between!go there"
),
paste0(
"Marvin K. Mooney Will You Please Go Now!", "The time has come.",
"The time has come. The time is now. Just go. Go. GO!",
"I don't care how."
)))
syuzhet::get_sentences(x)
syuzhet::get_sentences(rockt1$lyrics[1])
class(syuzhet::get_sentences(x))
View(sentence.list)
View(rockt1)
View(rockt1)
View(rockt1)
sentence.list<-NULL
for (i in 1:3){
sentences<-get_sentences(unlist(strsplit(rockt1$lyrics[i], split = "\n")))
if(length(sentences)>0){
emotions<-matrix(emotion(sentences)$emotion,
nrow=length(sentences),
byrow=T)
colnames(emotions)=emotion(sentences[1])$emotion_type
emotions=data.frame(emotions)
emotions=select(emotions,
anticipation,
joy,
surprise,
trust,
anger,
disgust,
fear,
sadness)
word.count<-f.word_count(sentences)
sentence.list=rbind(sentence.list,
cbind(rockt1[i,-ncol(rockt1)],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)))
}
}
sentences<-get_sentences(unlist(strsplit(rockt1$lyrics[1], split = "\n")))
emotions<-matrix(emotion(sentences)$emotion,
nrow=length(sentences),
byrow=T)
colnames(emotions)=emotion(sentences[1])$emotion_type
emotions=data.frame(emotions)
emotions=select(emotions,
anticipation,
joy,
surprise,
trust,
anger,
disgust,
fear,
sadness)
word.count<-f.word_count(sentences)
sentence.list=rbind(sentence.list,
cbind(rockt1[1,-ncol(rockt1)],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)))
View(sentence.list)
View(rockt1)
sentence.list<-NULL
for (i in 1:nrow(rockt1)){
sentences<-get_sentences(unlist(strsplit(rockt1$lyrics[i], split = "\n")))
if(length(sentences)>0){
emotions<-matrix(emotion(sentences)$emotion,
nrow=length(sentences),
byrow=T)
colnames(emotions)=emotion(sentences[1])$emotion_type
emotions=data.frame(emotions)
emotions=select(emotions,
anticipation,
joy,
surprise,
trust,
anger,
disgust,
fear,
sadness)
word.count<-f.word_count(sentences)
sentence.list=rbind(sentence.list,
cbind(rockt1$year[i],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)))
}
}
sentence.list=sentence.list%>%
filter(!is.na(word.count))
sentimentplot<-function(In.list, Time){
#"anticipation" "joy"          "surprise"     "trust"
#"anger"        "disgust"      "fear"         "sadness"
col.use=c("light grey", "darkgoldenrod1", "darkgoldenrod1", "darkgoldenrod1", "darkgoldenrod1",
"red2", "chartreuse3", "blueviolet","dodgerblue3")
In.list$topemotion=apply(select(In.list,
anticipation:sadness),
1, which.max)
In.list$topemotion.v=apply(select(In.list,
anticipation:sadness),
1, max)
In.list$topemotion[In.list$topemotion.v<0.01]=0
In.list$topemotion=In.list$topemotion+1
temp=In.list$topemotion.v
In.list$topemotion.v[temp<0.05]=1
df=In.list%>%
select(sent.id, word.count,
topemotion, topemotion.v)
ptcol.use=alpha(col.use[df$topemotion], sqrt(sqrt(df$topemotion.v)))
plot(df$sent.id, df$word.count,
col=ptcol.use,
type="h", #ylim=c(-10, max(In.list$word.count)),
main=Time)
}
sentimentplot(In.list = sentence.list,Time = "1970s")
names(sentence.list)
sentence.list<-NULL
for (i in 1:3){
sentences<-get_sentences(unlist(strsplit(rockt1$lyrics[i], split = "\n")))
if(length(sentences)>0){
emotions<-get_nrc_sentiment(sentences)
word.count=f.word_count(sentences)
emotions<-diag(1/(word.count+0.01))%*%as.matrix(emotions)
sentence.list=rbind(sentence.list,
cbind(rockt1[i,],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)))
}
}
sentence.list=sentence.list%>%
filter(!is.na(word.count))
names(sentence.list)
sentimentplot<-function(In.list, Time){
#"anticipation" "joy"          "surprise"     "trust"
#"anger"        "disgust"      "fear"         "sadness"
col.use=c("light grey", "darkgoldenrod1", "darkgoldenrod1", "darkgoldenrod1", "darkgoldenrod1",
"red2", "chartreuse3", "blueviolet","dodgerblue3")
In.list$topemotion=apply(select(In.list,
anticipation:sadness),
1, which.max)
In.list$topemotion.v=apply(select(In.list,
anticipation:sadness),
1, max)
In.list$topemotion[In.list$topemotion.v<0.01]=0
In.list$topemotion=In.list$topemotion+1
temp=In.list$topemotion.v
In.list$topemotion.v[temp<0.05]=1
df=In.list%>%
select(sent.id, word.count,
topemotion, topemotion.v)
ptcol.use=alpha(col.use[df$topemotion], sqrt(sqrt(df$topemotion.v)))
plot(df$sent.id, df$word.count,
col=ptcol.use,
type="h", #ylim=c(-10, max(In.list$word.count)),
main=Time)
}
sentimentplot(sentence.list, "1970s")
sentence.list<-NULL
for (i in 1:nrow(rockt1)){
sentences<-get_sentences(unlist(strsplit(rockt1$lyrics[i], split = "\n")))
if(length(sentences)>0){
emotions<-get_nrc_sentiment(sentences)
word.count=f.word_count(sentences)
emotions<-diag(1/(word.count+0.01))%*%as.matrix(emotions)
sentence.list=rbind(sentence.list,
cbind(rockt1[i,],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)))
}
}
sentence.list<-NULL
for (i in 1:50){
sentences<-get_sentences(unlist(strsplit(rockt1$lyrics[i], split = "\n")))
if(length(sentences)>0){
emotions<-get_nrc_sentiment(sentences)
word.count=f.word_count(sentences)
emotions<-diag(1/(word.count+0.01))%*%as.matrix(emotions)
sentence.list=rbind(sentence.list,
cbind(rockt1[i,],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)))
}
}
sentence.list=sentence.list%>%
filter(!is.na(word.count))
sentimentplot<-function(In.list, Time){
#"anticipation" "joy"          "surprise"     "trust"
#"anger"        "disgust"      "fear"         "sadness"
col.use=c("light grey", "darkgoldenrod1", "darkgoldenrod1", "darkgoldenrod1", "darkgoldenrod1",
"red2", "chartreuse3", "blueviolet","dodgerblue3")
In.list$topemotion=apply(select(In.list,
anticipation:sadness),
1, which.max)
In.list$topemotion.v=apply(select(In.list,
anticipation:sadness),
1, max)
In.list$topemotion[In.list$topemotion.v<0.01]=0
In.list$topemotion=In.list$topemotion+1
temp=In.list$topemotion.v
In.list$topemotion.v[temp<0.05]=1
df=In.list%>%
select(sent.id, word.count,
topemotion, topemotion.v)
ptcol.use=alpha(col.use[df$topemotion], sqrt(sqrt(df$topemotion.v)))
plot(df$sent.id, df$word.count,
col=ptcol.use,
type="h", #ylim=c(-10, max(In.list$word.count)),
main=Time)
}
sentimentplot(sentence.list, "1970s")
View(f.plotsent.len)
l<-unlist(strsplit(rock$lyrics, split = "\n"))
l
l<-unlist(strsplit(rock$lyrics[1], split = "\n"))
l
get_sentences(l)
unique(l)
get_nrc_sentiment(l)
sentence.list<-NULL
for (i in 1:20){
sentences<-unique(unlist(strsplit(rock$lyrics[i], split = "\n")))
if(length(sentences)>0){
emotions<-get_nrc_sentiment(sentences)
word.count=f.word_count(sentences)
emotions<-diag(1/(word.count+0.01))%*%as.matrix(emotions)
sentence.list=rbind(sentence.list,
cbind(rock[i,],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)))
}
}
sentence.list=sentence.list%>%
filter(!is.na(word.count))
sentimentplot<-function(In.list, Time){
#"anticipation" "joy"          "surprise"     "trust"
#"anger"        "disgust"      "fear"         "sadness"
col.use=c("light grey", "darkgoldenrod1", "darkgoldenrod1", "darkgoldenrod1", "darkgoldenrod1",
"red2", "chartreuse3", "blueviolet","dodgerblue3")
In.list$topemotion=apply(select(In.list,
anticipation:sadness),
1, which.max)
In.list$topemotion.v=apply(select(In.list,
anticipation:sadness),
1, max)
In.list$topemotion[In.list$topemotion.v<0.01]=0
In.list$topemotion=In.list$topemotion+1
temp=In.list$topemotion.v
In.list$topemotion.v[temp<0.05]=1
df=In.list%>%
select(sent.id, word.count,
topemotion, topemotion.v)
ptcol.use=alpha(col.use[df$topemotion], sqrt(sqrt(df$topemotion.v)))
plot(df$sent.id, df$word.count,
col=ptcol.use,
type="h", #ylim=c(-10, max(In.list$word.count)),
main=Time)
}
sentimentplot(sentence.list, "1970s")
strsplit(rock$lyrics[2], split = " ")
strsplit(rock$lyrics[2], split = "\n")
sentence.list<-NULL
for (i in 1:20){
sentences<-unlist(strsplit(rock$lyrics[i], split = "\n"))
if(length(sentences)>0){
emotions<-get_nrc_sentiment(sentences)
word.count=f.word_count(sentences)
emotions<-diag(1/(word.count+0.01))%*%as.matrix(emotions)
sentence.list=rbind(sentence.list,
cbind(rock[i,],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)))
}
}
sentence.list=sentence.list%>%
filter(!is.na(word.count))
sentimentplot<-function(In.list, Time){
#"anticipation" "joy"          "surprise"     "trust"
#"anger"        "disgust"      "fear"         "sadness"
col.use=c("light grey", "darkgoldenrod1", "darkgoldenrod1", "darkgoldenrod1", "darkgoldenrod1",
"red2", "chartreuse3", "blueviolet","dodgerblue3")
In.list$topemotion=apply(select(In.list,
anticipation:sadness),
1, which.max)
In.list$topemotion.v=apply(select(In.list,
anticipation:sadness),
1, max)
In.list$topemotion[In.list$topemotion.v<0.01]=0
In.list$topemotion=In.list$topemotion+1
temp=In.list$topemotion.v
In.list$topemotion.v[temp<0.05]=1
df=In.list%>%
select(sent.id, word.count,
topemotion, topemotion.v)
ptcol.use=alpha(col.use[df$topemotion], sqrt(sqrt(df$topemotion.v)))
plot(df$sent.id, df$word.count,
col=ptcol.use,
type="h", #ylim=c(-10, max(In.list$word.count)),
main=Time)
}
sentimentplot(sentence.list, "1970s")
emo.means=colMeans(select(sentence.list, anticipation:sadness)>0.01)
col.use=c("darkgoldenrod1", "darkgoldenrod1", "darkgoldenrod1", "darkgoldenrod1",
"red2", "chartreuse3", "blueviolet","dodgerblue3")
barplot(emo.means[order(emo.means)], las=2, col=col.use[order(emo.means)], horiz=T, main="Inaugural Speeches")
names(sentence.list)
View(f.plotsent.len)
?get_nrc_sentiment
